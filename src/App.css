.App {
  text-align: center;
}

/* .App-logo {
  height: 40vmin;
  pointer-events: none;
} */

/* @media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
} */

.App{
  padding: 1em;
  background-color: #282c34;
  min-height: 100vh;
  height: fit-content;
  align-items: center;
  justify-content: center;
}

.App-header {
  display: flex;
  flex-direction: column;
  font-size: calc(10px + 2vmin);
  color: white;
}

/* .App-link {
  color: #61dafb;
} */

/* @keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */


/* Referred to StackOverflow 1st Answer at https://stackoverflow.com/questions/13091433/center-child-divs-inside-parent-div */
.deleteButton-back {
  text-align: center;
}


.term {
  text-align: left;
  font-weight: 700;
  font-size: 1.2rem;
  color: grey;
  /* margin: 1rem; */
  margin-bottom: 4.5rem;
}

.definition {
  text-align: left;
  font-weight: 700;
  font-size: 1.2rem;
  color: grey;
  /* margin: 1rem; */
  margin-bottom: 1rem;
}


/* Referred to StackOverflow 1st Answer at https://stackoverflow.com/questions/13091433/center-child-divs-inside-parent-div */
.detailedView-back {
  text-align: center;
}

.showDetailsButton {
  background-color: hsl(200, 100%, 50%);
  color: white;
  padding: .5em 1em;
  border-radius: .3em;
  border: none;
  cursor: pointer;
  margin: .5em; /* added */
  margin-top: 1rem;
  margin-bottom: 1.5rem;
}

.showDetailsButton:hover {
  background-color: hsl(200, 100%, 40%);
}

.cardID {
  /* margin-left: -1rem; */
  margin-top: 0.8rem;
  margin-bottom: 1.5rem;
  text-align: left;
  color: grey;
}


/* Referred to StackOverflow Answer #1 and #2 at https://stackoverflow.com/questions/5468766/can-i-apply-a-css-style-to-an-element-name */
input[name="termDisplay"] {
  background-color: lightblue;
  width: 18rem;
  height: 3rem;
  /* margin: 0.5rem; */
  margin-top: 0.5rem;
  color: darkblue;
  font-size: medium;
  font-weight: 700;
}

input[name="definitionDisplay"] {
  background-color: antiquewhite;
  width: 18rem;
  height: 5rem;
  /* margin: 0.5rem; */
  margin-top: 0.5rem;
  color: saddlebrown;
  font-size: medium;
  font-weight: 700;
}


/* Referred to StackOverflow Answer #1 at https://stackoverflow.com/questions/61938284/how-to-change-color-of-text-based-on-text-value-by-using-css */
/* input[value=""] {
  color:red;
  background-color: lightgrey;
} */



/* Adapted from https://github.com/WebDevSimplified/React-Flashcard-App/blob/master/src/App.css */

/* body {
  background-color: #C8D0D2;
  margin: 0;
} */

.container {
  max-width: 1300px; /* change how many cards displayed per row; with grid setting ...minmax(200px, 1fr)... -- 900px: 4 cards/row ; 1100px: 5 cards/row ; 1300px: 6 cards/row */
  margin: 1rem 2rem;
}

/* .header {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  flex-wrap: wrap;
  background-color: white;
  padding: 0 1.5rem;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);
} */

.header {
  margin-bottom: 3rem;
}

.form-group {
  display: flex;
  flex-direction: column;
  margin: .5rem;
}

.form-group > label {
  color: lightgray; /* color: #777; */
  font-size: 1.25rem; /* font-size: .75rem; */
  margin-bottom: .25rem;
}

.btn {
  background-color: hsl(200, 100%, 50%);
  color: white;
  padding: .5em 1em;
  border-radius: .3em;
  border: none;
  cursor: pointer;
  margin: .5em; /* added */
}

.btn:hover {
  background-color: hsl(200, 100%, 40%);
}

.card-grid {
  display: grid;
  align-items: center;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 5rem;
}

.card {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  border-radius: .25rem;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .3);
  background-color: white;
  transform-style: preserve-3d;
  transition: 150ms;
  cursor: pointer;
  transform: perspective(1000px) rotateY(var(--rotate-y, 0)) translateY(var(--translate-y, 0));
  height: max-content; /* added, no obvious effect? */
}

.card:hover {
  --translate-y: -2px;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, .5);
}

.card.flip {
  --rotate-y: 180deg;
  justify-content: right;
  padding-right: 1.5rem;
}

.card.flip .front {
  opacity: 0; /* added so that in Safari, text on the front side will disappear when card is flipped to the back side */
  /* Note: image does not show up in Safari (image shows up in Firefox) when card is flipped to the back side */
}

.card .front {
  /* left: 0; */ /* Removed */
  transform: rotateY(0deg); /* added so that in Firefox, text on the front side will disappear when card is flipped to the back side */
}

.card .front,
.card .back {
  position: absolute;
  padding: 1rem;
  backface-visibility: hidden;
}

.card .back {
  transform: rotateY(180deg);
}